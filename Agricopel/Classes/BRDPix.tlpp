#Include "Protheus.ch"
#INCLUDE "TOPCONN.CH"`
#INCLUDE "FILEIO.CH"
#include "tlpp-core.th"
#include "tlpp-rest.th"
#include 'tbiconn.ch'

#define LF chr(10)

Class BRDPix

	Public Data oPagador as Object
	Public Data oRecebedor as Object
	Public Data cIdTransacao as Character
	Public Data nValor as Numeric
	Public Data cDescricao as Character
	Public Data cUrl as Character
	Public Data cMetodo as Character

    /*

    ClientKey : 0356dec4-7cde-4d91-b6e1-77f3433665e1
    ClientSecret: 29fbf612-aa65-4c29-987c-9ba0c76afd89
    CHAVE PIX HOMOLOGAÇÃO: b3bdd4e4-7cdc-41c1-bd70-7842d987d79f

    */

	Public Method New() Constructor
	Public Method Reset()
	Public Method SolicitarTransferencia()
	Public Method ConsultaTransferencia()

EndClass

Class BRDIntegracao

	Public Data cErro as Character
	Public Data cToken as Character
	Public Data cJti as Character
	Public Data cTime as Character
	Public Data cSign as Character
	Public Data bResult as Logical
	Public Data cClientKey as Character
	Public Data cClientSecret as Character
	Public Data cAuthorization as Character

	Public Method New() Constructor
	Public Method Reset()
	Public Method Assinatura()
	Public Method Token()

EndClass

Class BRDPagador

	Public Data cTipoChave as Character
	Public Data cChavePix as Character
	Public Data cAgencia as Character
	Public Data cConta as Character

	Public Method New() Constructor
	Public Method Reset()

EndClass

Class BRDRecebedor

	Public Data cCpfCnpj as Character
	Public Data cTipoChave as Character
	Public Data cChavePix as Character
	Public Data cAgencia as Character
	Public Data cBanco as Character
	Public Data cIspb as Character
	Public Data cConta as Character
	Public Data cDigitoConta as Character
	Public Data cTipoConta as Character
	Public Data cFavorecido as Character
	Public Method Reset()

	Public Method New() Constructor

EndClass


Method New() Class BRDPix
	Local lRet := .T.
	Local lJob := IsBlind()
	Local _oPagador := BRDPagador() :New()
	Local _oRecebedor := BRDRecebedor():New()

	Self:oPagador := _oPagador
	Self:oRecebedor := _oRecebedor

	Self:cUrl := "https://qrpix.bradesco.com.br"



Return lRet

Method Reset() Class BRDPix
	Local lRet := .T.
	Local lJob := IsBlind()
	Local _oPagador := BRDPagador() :New()
	Local _oRecebedor := BRDRecebedor():New()

	Self:cClientKey := SuperGetMv("AG_PIXKEY", ,"8e035687-9f2b-4b8a-871b-6f71b8670423")
	Self:cClientSecret := SuperGetMv("AG_PIXSEC", ,"65fa8a4f-2b70-43bb-a5ac-1d42457e58da")
	Self:oPagador := _oPagador
	Self:oRecebedor := _oRecebedor

	Self:cUrl := "https://qrpix.bradesco.com.br"
	//URL HOMOLOG Self:cUrl := "https://qrpix-h.bradesco.com.br"
	Self:cMetodo := ""

    /*

    ClientKey : 0356dec4-7cde-4d91-b6e1-77f3433665e1
    ClientSecret: 29fbf612-aa65-4c29-987c-9ba0c76afd89
    CHAVE PIX HOMOLOGAÇÃO: b3bdd4e4-7cdc-41c1-bd70-7842d987d79f

    */

Return lRet

Method New() Class BRDPagador
	Local lRet := .T.
	Local lJob := IsBlind()

	//SAMPLE TESTE

	Self:cTipoChave := "C" //EVP
	Self:cChavePix := "81632093000411"
	Self:cAgencia := "2693"
	Self:cConta := "52922"

Return lRet

Method Reset() Class BRDPagador
	Local lRet := .T.
	Local lJob := IsBlind()

	//SAMPLE TESTE

	Self:cTipoChave := "" //EVP
	Self:cChavePix := ""
	Self:cAgencia := ""
	Self:cConta := ""

Return lRet

Method New() Class BRDRecebedor
	Local lRet := .T.
	Local lJob := IsBlind()

	Self:cCpfCnpj := ""
	Self:cChavePix := ""
	Self:cTipoChave := "CPFCNPJ"
	Self:cAgencia := ""
	Self:cBanco := ""
	Self:cIspb := ""
	Self:cConta := ""
	Self:cDigitoConta := ""
	Self:cTipoConta := "CONTA_CORRENTE"
	Self:cFavorecido := ""

Return lRet

Method Reset() Class BRDRecebedor
	Local lRet := .T.
	Local lJob := IsBlind()

	Self:cCpfCnpj := ""
	Self:cTipoChave := ""
	Self:cChavePix := ""
	Self:cAgencia := ""
	Self:cBanco := ""
	Self:cIspb := ""
	Self:cConta := ""
	Self:cDigitoConta := ""
	Self:cTipoConta := ""
	Self:cFavorecido := ""

Return lRet

Method SolicitarTransferencia() Class BRDPix
	Local lRet := .T.
	Local jPagador := JSONObject() :New()
	Local jRecebedor := JSONObject() :New()
	Local jJsonPost := JSONObject() :New()
	Local oIntegrador := BRDIntegracao():New()
	Local aHeader := {}
	Local cURL:= ""
	Local cToken:= ""
	Local cHeaderRet:= ""
	Local cErro:= ""
	Local nCodResp:= 0
	Public nNossoNum   := 0
	Public oObjLog     := nil

	Self:cMetodo := "/v1/spi/solicitar-transferencia"
	cURL:= Self:cUrl + Self:cMetodo

	oObjLog := LogSMS():new("APIBRD_PIX")
	oObjLog:setFileName('\log\APIBRD\solicitartransferencia'+cEmpAnt+'_'+cFilant+'_'+dtos(date())+"_"+strtran(time(),":","")+"_"+SE2->E2_NUM+"_"+cValToChar(ThreadId())+'.txt')
	oObjLog:eraseLog()
	oObjLog:saveMsg(GetEnvServer())

	jPagador["tipoChave"] := Self:oPagador:cTipoChave
	jPagador["chavePix"] := Self:oPagador:cChavePix
	jPagador["agencia"] := Self:oPagador:cAgencia
	jPagador["conta"] := Self:oPagador:cConta

	jRecebedor["cpfcnpj"] := Self:oRecebedor:cCpfCnpj
	jRecebedor["tipoChave"] := Self:oRecebedor:cTipoChave
	jRecebedor["chavePix"] := Self:oRecebedor:cChavePix
	jRecebedor["nomeFavorecido"] := Self:oRecebedor:cFavorecido
	jRecebedor["agencia"] := Self:oRecebedor:cAgencia
	jRecebedor["conta"] := Self:oRecebedor:cConta
	jRecebedor["digitoConta"] := Self:oRecebedor:cDigitoConta
	jRecebedor["ispb"] := Self:oRecebedor:cIspb
	jRecebedor["tipoConta"] := Self:oRecebedor:cTipoConta

	jJsonPost["pagador"] := jPagador:ToJson()
	jJsonPost["recebedor"] := jRecebedor:ToJson()
	jJsonPost["idtransacao"] := Self:cIdTransacao
	jJsonPost["valor"] := cvaltochar(Self:nValor)
	jJsonPost["descricao"] := Self:cDescricao



	IF(oIntegrador:Token())

		cToken:= oIntegrador:cToken
		//Autorização no header
		AAdd(aHeader, 'User-Agent: Mozilla/4.0 (compatible; Protheus ' + GetBuild() + ')' )
		aadd(aHeader, "Content-Type: application/json")
		Aadd(aHeader, "Authorization: "+cToken)

		//HTTPSPost(cUrl, /*cGetParms*/, jJsonPost:ToJson(), /*nTimeOut*/, aHeadStr, @cHeaderRet)
		//cJson := '{"pagador": { "tipoChave": "EVP","chavePix": "b3bdd4e4-7cdc-41c1-bd70-7842d987d79f" },"recebedor": {"cpfCnpj": "09999902291969","tipoChave": "CPFCNPJ","chavePix": "09999902291969","nomeFavorecido": "FULANO DA SILVA JUNIOR"},"valor": "1.00","idtransacao": "TestesTiagoAPI35","descricao": "Pagamento teste"}'
		cJson := '{'
		cJson += '"pagador": {'
		IF(ALLTRIM(jPagador["tipoChave"]) == "C")
			cJson += '"tipoChave": "CPFCNPJ",'
			cJson += '"chavePix": "'+ALLTRIM(jPagador["chavePix"])+'"'
		ELSE
			cJson += '"tipoChave": "AGENCIACONTA",'
			cJson += '"agencia": "'+ALLTRIM(jPagador["agencia"])+'",'
			cJson += '"conta": "'+ALLTRIM(jPagador["conta"])+'"'
		ENDIF
		
		cJson += '},'
		cJson += '"recebedor": {'
		cJson += '"cpfCnpj": "'+ALLTRIM(jRecebedor["cpfcnpj"])+'",'
		IF(ALLTRIM(jRecebedor["tipoChave"]) == "C")
			cJson += '"tipoChave": "CPFCNPJ",'
			cJson += '"chavePix": "'+ALLTRIM(jRecebedor["chavePix"])+'",'
		ELSE
			cJson += '"tipoChave": "AGENCIACONTA",'
			cJson += '"agencia": "'+ALLTRIM(jRecebedor["agencia"])+'",'
			cJson += '"conta": "'+ALLTRIM(jRecebedor["conta"])+'",'
			cJson += '"digitoConta": "'+ALLTRIM(jRecebedor["digitoConta"])+'",'
			cJson += '"tipoConta": "'+ALLTRIM(jRecebedor["tipoConta"])+'",'
			cJson += '"ispb": "'+ALLTRIM(jRecebedor["ispb"])+'",'
		ENDIF		
		cJson += '"nomeFavorecido": "'+ALLTRIM(jRecebedor["nomeFavorecido"])+'"'
		cJson += '},'
		cJson += '"valor": "'+ALLTRIM(STRTRAN(TRANSFORM(VAL(jJsonPost["valor"]),'@E 999999999.99'),',','.'))+'",'
		cJson += '"idtransacao": "'+ALLTRIM(jJsonPost["idtransacao"])+'",'
		cJson += '"descricao": "'+ALLTRIM(jJsonPost["descricao"])+'"'
		cJson += '}'
		cParam := 'grant_type=client_credentials'

		aRet := U_RCRestSSL(cURL,cParam , cJson, aHeader )

        /*

        [UTF8]"{"pagador":{"cpfCnpj":"81632093000411","agencia":"2693","conta":"52922","tipoConta":"CONTA_CORRENTE"},"recebedor":{"cpfCnpj":"10239757939","tipoChave":"CPFCNPJ","chavePix":"10239757939","nomeFavorecido":"Ludmila Ynnae da Silva"},"valor":"72.93","e2e":"E60746948202410071826L2693lXZ208","idTransacao":"A000345243","descricao":"PAGAMENTO FORNECEDOR","dataCriacao":"2024-10-07T18:26:31.777Z","status":"EM_PROCESSAMENTO","valorTarifa":"0.00","motivo":"Transação em processamento"}"

        DATACRIACAO = "2024-10-07T18:26:31.777Z"
        DESCRICAO = "PAGAMENTO FORNECEDOR"
        E2E = "E60746948202410071826L2693lXZ208"
        IDTRANSACAO = "A000345243"
        MOTIVO = "TransaÃ§Ã£o em processamento"
        PAGADOR = Object
        AGENCIA = "2693"
        CONTA = "52922"
        CPFCNPJ = "81632093000411"
        TIPOCONTA = "CONTA_CORRENTE"
        RECEBEDOR = Object
        CHAVEPIX = "10239757939"
        CPFCNPJ = "10239757939"
        NOMEFAVORECIDO = "Ludmila Ynnae da Silva"
        TIPOCHAVE = "CPFCNPJ"
        STATUS = "EM_PROCESSAMENTO"
        VALOR = "72.93"
        VALORTARIFA = "0.00"

        */         

		If EMPTY(aRet[4]:VIOLACOES)

			If ZLA->(DBSeek(xFilial("ZLA")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO)))
				Reclock("ZLA",.F.)
				ZLA->ZLA_FILIAL:= xFilial("ZLA")
				ZLA->ZLA_PREFIX:= SE2->E2_PREFIXO
				ZLA->ZLA_NUM:= SE2->E2_NUM
				ZLA->ZLA_PARCEL:= SE2->E2_PARCELA
				ZLA->ZLA_TIPO:= SE2->E2_TIPO
				ZLA->ZLA_CLIFOR:= SE2->E2_FORNECE
				ZLA->ZLA_LOJA:= SE2->E2_LOJA
				ZLA->ZLA_VENCTO:= SE2->E2_VENCTO
				ZLA->ZLA_VALOR:= SE2->E2_VALOR
				ZLA->ZLA_NUMBOR:= SE2->E2_NUMBOR
				ZLA->ZLA_BANCO:= SEE->EE_CODIGO
				ZLA->ZLA_AGENCI:= SEE->EE_AGENCIA
				ZLA->ZLA_CONTA:= SEE->EE_CONTA
				ZLA->ZLA_RECPAG:= 'P'
				ZLA->ZLA_STATUS:= '2'
				ZLA->ZLA_DATA:= dDataBase
				ZLA->ZLA_USER:= __cUserId
				ZLA->ZLA_IDCNAB:= SE2->E2_IDCNAB
				ZLA->ZLA_FILORI:= SE2->E2_FILORIG
				ZLA->ZLA_IDTRAN := aRet[4]:IDTRANSACAO
				ZLA->ZLA_PIXE2E := aRet[4]:E2E
				ZLA->ZLA_IDAPI :=  aRet[4]:IDTRANSACAO
				ZLA->ZLA_DTOPER := Date()
				MsUnlock()

				Reclock("ZLB",.T.)
				ZLB_FILIAL:= xFilial("ZLB")
				ZLB_CODIGO:= cCodigo
				ZLB_DATA:= dDataBase
				ZLB_HORA:= Time()
				ZLB_EVENTO:= '1' //Envio do titulo
				ZLB_STATUS:= ZLA->ZLA_STATUS
				ZLB_USER:= __cUserId
				ZLB_ERRO:= " "
				ZLB_FILORI:= ZLA->ZLA_FILORI
				msUnlock()

				lRet:= .T.
			Else
				lRet:= .F.
			Endif
		ELSE
			If ZLA->(DBSeek(xFilial("ZLA")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO)))
				Reclock("ZLA",.F.)
				ZLA->ZLA_FILIAL:= xFilial("ZLA")
				ZLA->ZLA_PREFIX:= SE2->E2_PREFIXO
				ZLA->ZLA_NUM:= SE2->E2_NUM
				ZLA->ZLA_PARCEL:= SE2->E2_PARCELA
				ZLA->ZLA_TIPO:= SE2->E2_TIPO
				ZLA->ZLA_CLIFOR:= SE2->E2_FORNECE
				ZLA->ZLA_LOJA:= SE2->E2_LOJA
				ZLA->ZLA_VENCTO:= SE2->E2_VENCTO
				ZLA->ZLA_VALOR:= SE2->E2_VALOR
				ZLA->ZLA_NUMBOR:= SE2->E2_NUMBOR
				ZLA->ZLA_BANCO:= SEE->EE_CODIGO
				ZLA->ZLA_AGENCI:= SEE->EE_AGENCIA
				ZLA->ZLA_CONTA:= SEE->EE_CONTA
				ZLA->ZLA_RECPAG:= 'P'
				ZLA->ZLA_STATUS:= '2'
				ZLA->ZLA_DATA:= dDataBase
				ZLA->ZLA_USER:= __cUserId
				ZLA->ZLA_IDCNAB:= SE2->E2_IDCNAB
				ZLA->ZLA_FILORI:= SE2->E2_FILORIG
				ZLA->ZLA_IDTRAN := aRet[4]:IDTRANSACAO
				ZLA->ZLA_PIXE2E := aRet[4]:E2E
				ZLA->ZLA_IDAPI :=  aRet[4]:IDTRANSACAO
				ZLA->ZLA_DTOPER := Date()
				MsUnlock()

				Reclock("ZLB",.T.)
				ZLB_FILIAL:= xFilial("ZLB")
				ZLB_CODIGO:= cCodigo
				ZLB_DATA:= dDataBase
				ZLB_HORA:= Time()
				ZLB_EVENTO:= '2' //Envio do titulo
				ZLB_STATUS:= ZLA->ZLA_STATUS
				ZLB_USER:= __cUserId
				ZLB_ERRO:= aRet[4]:VIOLACOES[1]:RAZAO
				ZLB_FILORI:= ZLA->ZLA_FILORI
				msUnlock()
			endif
		endif
	endif


Return lRet

/*
        {
    "pagador": {
    "tipoChave": "EVP",
    "chavePix": "a892d4c6-d00f-4f21-8c95-e165b3dc88ae"
    },
    "recebedor": {
    "cpfCnpj": "09999902291969",
    "tipoChave": "CPFCNPJ",
    "chavePix": "09999902291969",
    "nomeFavorecido": "KLEBER ADILSON"
    },
    "idtransacao": "TransfenciaAPI000000000000000000001",
    "valor": "50.00",
    "descricao": "Pagamento teste"
    }
*/

Method ConsultaTransferencia() Class BRDPix
	Local lRet := .T.
	Local lJob := IsBlind()


Return lRet


/*

Cadastro do 77777 - Fornecedor

Dados do Pagador:
"pagador": {
        "tipoChave": "EVP",
        "chavePix": "de24cbca-2c66-4372-9c16-26056b966ece"
    },

  "pagador": {
        "tipoChave": "AGENCIACONTA",
        "agencia": "532",
        "conta": "42281"
    },


Dados do Recebedor:

    "recebedor": {
        "cpfCnpj": "89631141470",
        "tipoChave": "AGENCIACONTA",
        "agencia": "3987",
        "banco": "237",
        "ispb": "60746948",
        "conta": "200958",
        "digitoConta": "7",
        "tipoConta": "CONTA_POUPANCA",
        "nomeFavorecido": "FULANO DA SILVA JUNIOR"
    },


    "recebedor": {
        "cpfCnpj": "89631141470",
        "tipoChave": "EVP",
        "chavePix": "b85f5a59-57d0-405c-aba5-90f3a47c8326",
        "nomeFavorecido": "FULANO DA SILVA JUNIOR"
    },


    "recebedor": {
        "cpfCnpj": "89631141470",
        "tipoChave": "EVP",
        "chavePix": "0ac2af24-de9b-4f33-aa6c-9e1bb2f619fd",
        "nomeFavorecido": "FULANO DA SILVA JUNIOR"
    },

    "recebedor": {
        "cpfCnpj": "09999902291969",
        "tipoChave": "CPFCNPJ",
        "chavePix": "09999902291969",
        "nomeFavorecido": "FULANO DA SILVA JUNIOR"
    },

    */

	// Public Method Assinatura()
	// Public Method Token()

Method New() Class BRDIntegracao

	Self:cClientKey := "8e035687-9f2b-4b8a-871b-6f71b8670423"
	Self:cClientSecret := "65fa8a4f-2b70-43bb-a5ac-1d42457e58da"
	Self:cAuthorization := "Basic OGUwMzU2ODctOWYyYi00YjhhLTg3MWItNmY3MWI4NjcwNDIzOjY1ZmE4YTRmLTJiNzAtNDNiYi1hNWFjLTFkNDI0NTdlNThkYQ=="
	Self:cErro := ""
	Self:cToken := ""
	Self:cJti := ""
	Self:cTime := ""
	Self:cSign := ""
	Self:bResult := .F.

Return

Method Token() Class BRDIntegracao
	Local cURL := "https://qrpix.bradesco.com.br" //GetNewPar("AC_BRDURLA","https://proxy.api.prebanco.com.br")
	Local aHeader := {}
	Local cPath := "/oauth/token"
	Local cJson := NIL

	AAdd(aHeader, 'User-Agent: Mozilla/4.0 (compatible; Protheus ' + GetBuild() + ')' )
	aadd(aHeader, "Content-Type: application/x-www-form-urlencoded")
	Aadd(aHeader, "Authorization: "+Self:cAuthorization)

	cParam := 'grant_type=client_credentials'
	cJson := ""

	aRet := U_RCRestSSL(cURL+cPath, cParam, cJson, aHeader )

	IF((aRet[1]) .AND. aRet[3] == "05") //retorno .T.
		Self:cToken := aRet[4]:ACCESS_TOKEN
	ELSE // retorno .F.
		Self:cToken := "INVALIDO"
	ENDIF


Return .T.

Method Assinatura() Class BRDIntegracao
	Local cSign := ""
	Local cComando1 := ""
	Local cComando2 := ""
	Local cRootServ := GetSrvProfString ("ROOTPATH","")
	Local cDirServ := "\cert APIs bancos\openssl\"

	cComando1 := "dgst -sha256 -keyform pem -sign privkey_"+cEmpAnt+".pem -out assinado.txt request.txt"
	cComando2 := "enc -base64 -in assinado.txt -out assinado.txt.base64" //codifica em base64

	If WaitRunSrv(cRootServ+cDirServ+ 'openssl.exe' +space(1)+cComando1,.T.,cRootServ+cDirServ)
		If File(cDirServ+ 'assinado.txt' )
			WaitRunSrv(cRootServ+cDirServ+ 'openssl.exe' +space(1)+cComando2,.T.,cRootServ+cDirServ)
			If File(cDirServ+ 'assinado.txt.base64' )
				//Lê arquivo gerado com assinatura
				cSign := Memoread(cDirServ+ 'assinado.txt.base64' )
				cSign := StrTran(cSign,"/","_")
				cSign := StrTran(cSign,"+","-")
				cSign := StrTran(cSign,"==","")
				cSign := Strtran(cSign,chr(10),"")

				//Apaga arquivos gerados
				fErase(cDirServ+ 'assinado.txt' )
				fErase(cDirServ+ 'assinado.txt.base64' )
				fErase(cDirServ+ 'request.txt' )
			Endif
		Endif

	Endif

	If Empty(cSign)
		oObjLog:saveMsg("Falha ao gerar a assinatura da requisicao.")
	Endif

	Self:cSign := cSign

Return .T.


